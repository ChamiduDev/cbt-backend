"use client";
import { useState } from "react";
import { useRouter } from "next/navigation";

const LoginPage = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const router = useRouter();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");

    

    console.log("Attempting login...");
    try {
      const res = await fetch("/api/auth/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email, password }),
      });

      console.log("Login API response status:", res.status);
      console.log("Login API response ok:", res.ok);

      if (res.ok) {
        console.log("Login successful, redirecting to admin dashboard.");
        router.push("/admin-dashboard");
      } else {
        const errorData = await res.json();
        console.error("Login failed:", errorData);
        setError(errorData.msg || "An error occurred");
      }
    } catch (error) {
      console.error("Login API call failed:", error);
      setError("An error occurred. Please try again.");
    }
  };

  return (
    <div
      className="relative flex items-center justify-center min-h-screen bg-cover bg-center"
      style={{ backgroundImage: "url(/image.jpg)" }}
    >
      <div className="absolute inset-0 bg-black/80" />
      <div className="relative w-full max-w-md p-8 space-y-6 bg-white/20 rounded-lg shadow-md backdrop-blur-md border border-yellow-400">
        <h1 className="text-2xl font-bold text-center text-yellow-400" style={{ textShadow: '2px 2px 4px rgba(0, 0, 0, 0.5)' }}>
          Ceylon Black Taxi
        </h1>
        <form className="space-y-6" onSubmit={handleSubmit}>
          <div>
            <label
              htmlFor="email"
              className="block text-sm font-medium text-white"
            >
              Email or User
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="block w-full px-3 py-2 mt-1 text-white placeholder-gray-400 bg-transparent border border-gray-300 rounded-md shadow-sm appearance-none focus:outline-none focus:ring-yellow-400 focus:border-yellow-400 sm:text-sm"
            />
          </div>
          <div>
            <label
              htmlFor="password"
              className="block text-sm font-medium text-white"
            >
              Password
            </label>
            <input
              id="password"
              name="password"
              type="password"
              autoComplete="current-password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="block w-full px-3 py-2 mt-1 text-white placeholder-gray-400 bg-transparent border border-gray-300 rounded-md shadow-sm appearance-none focus:outline-none focus:ring-yellow-400 focus:border-yellow-400 sm:text-sm"
            />
          </div>
          {error && <p className="text-sm text-red-600">{error}</p>}
          <div>
            <button
              type="submit"
              className="flex justify-center w-full px-4 py-2 text-sm font-bold text-black bg-yellow-400 border border-transparent rounded-md shadow-sm hover:bg-yellow-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-400"
            >
              Login
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginPage;